#! /bin/sh

# Copyright (C) 2016
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  US

### BEGIN INIT INFO
# Provides:          radosgw
# Required-Start:    $remote_fs $named $network $time
# Required-Stop:     $remote_fs $named $network $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: radosgw RESTful rados gateway
# Description: radosgw RESTful rados gateway
### END INIT INFO

PATH=/sbin:/bin:/usr/bin

. /lib/lsb/init-functions

if ( test -e /etc/ceph/.cephrc );then
    . /etc/ceph/.cephrc
else
    CEPH_CONF=/etc/ceph/ceph.conf
fi

daemon_is_running() {
    daemon=$1
    if pidof $daemon >/dev/null; then
        echo "$daemon is running."
        exit 0
    else
        echo "$daemon is not running."
        exit 1
    fi
}

VERBOSE=0
for opt in $*; do
    if [ "$opt" = "-v" ] || [ "$opt" = "--verbose" ]; then
       VERBOSE=1
    fi
done

# prefix for radosgw instances in ceph.conf
PREFIX='client.radosgw.'

# user to run radosgw as (it not specified in ceph.conf)
DEFAULT_USER='www-data'

RADOSGW=`which radosgw`
if [ ! -x "$RADOSGW" ]; then
    [ $VERBOSE -eq 1 ] && echo "$RADOSGW could not start, it is not executable."
    exit 1
fi

case "$1" in
    start)
        for name in `ceph-conf -c $CEPH_CONF --list-sections $PREFIX`;
        do
            auto_start=`ceph-conf -c $CEPH_CONF -n $name 'auto start'`
            if [ "$auto_start" = "no" ] || [ "$auto_start" = "false" ] || [ "$auto_start" = "0" ]; then
                continue
            fi

            # is the socket defined?  if it's not, this instance shouldn't run as a daemon.
            rgw_socket=`$RADOSGW -c $CEPH_CONF -n $name --show-config-value rgw_socket_path`
            if [ -z "$rgw_socket" ]; then
                continue
            fi

            # mapped to this host?
            host=`ceph-conf -c $CEPH_CONF -n $name host`
            hostnames=`hostname -A`
            # hostname_verified is 1 if radosgw host is not in hostnames otherwise it is 0.
            hostname_verified=2
            for hostname in $hostnames;
            do
               if [ "$hostname" != "$host" ]; then
                  hostname_verified=1
               else
                  hostname_verified=0
                  break
               fi
            done
            if [ $hostname_verified -ne 0 ]; then
               [ $VERBOSE -eq 1 ] && echo "none of the hostnames $hostnames could be found in ceph.conf:[$name], not starting."
               continue
            fi

            user=`ceph-conf -c $CEPH_CONF -n $name user`
            if [ -z "$user" ]; then
                user="$DEFAULT_USER"
            fi

            log_file=`$RADOSGW -c $CEPH_CONF -n $name --show-config-value log_file`
            if [ -n "$log_file" ] && [ ! -e "$log_file" ]; then
                touch "$log_file"
                chown $user $log_file
            fi

            echo "Starting $name..."
            start-stop-daemon --start -u $user -x $RADOSGW -- -n $name -c $CEPH_CONF
        done
        daemon_is_running $RADOSGW
        ;;
    reload)
        echo "Reloading $name..."
        start-stop-daemon --stop --signal HUP -x $RADOSGW --oknodo
        ;;
    restart|force-reload)
        $0 stop
        $0 start
        ;;
    stop)
        start-stop-daemon --stop -x $RADOSGW --oknodo
        ;;
    status)
        daemon_is_running $RADOSGW
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload|reload|status} [-v|--verbose]" >&2
        exit 3
        ;;
esac

