#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development Company LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
rabbitmq_cluster_name: hos_rabbit
rabbitmq_cluster_size: "{{ groups[verb_hosts.FND_RMQ] | length }}"
rabbitmq_clustered: "{{ (rabbitmq_cluster_size | int) > 1 }}"

rabbitmq_join_cluster_timeout: "2m"

# We always reset unless overridden.
rabbitmq_do_not_reset_node: false

rabbitmq_ha_policy_name: HA

rabbitmq_iptables_chain: rabbitmq-temp

rabbitmq_list_queues_timeout: "5m"

# Defaults to rabbit. This can be useful if you want to run more than one node
# per machine. Note: relate to RABBITMQ_NODENAME env as well.
# WARNING: Changing the two setting below requires a redeploy.

# NOTE: There are two notions of a hostname here: the one that Ansible has,
# which is embedded in groups.FND_RMQ, and the one supplied to the playbooks
# via the host.* structure. There is an embedded assumption in these plays
# that equivalent hosts have identical names. If this is broken, the following
# definitions will be in error.
# The assertion we require is at least that:
#    inventory_hostname == rabbit_cp.hostname
# for all hosts in a rabbit cluster.
rabbitmq_node: rabbit
rabbitmq_nodename: "{{ rabbitmq_node }}@{{ rabbitmq_cp.hostname }}"

# Restrict a user from stopping node in an order that could damage a running
# cluster unless overridden.
rabbitmq_permit_multi_stop: false

# A user can overrided the host to use for clustering to allow a non-default
# cluster opration.
rabbitmq_primary_hostname: "{{ groups[verb_hosts.FND_RMQ][0] }}"
rabbitmq_remote_hostname: >
  {{ groups[verb_hosts.FND_RMQ]
    [(groups[verb_hosts.FND_RMQ].index(rabbitmq_primary_hostname) + 1) %
      (groups[verb_hosts.FND_RMQ] | length )] }}

# The host to use for remote commands.
rabbitmq_remote_host: >
  {%- if inventory_hostname == rabbitmq_primary_hostname -%}
    {{ rabbitmq_remote_hostname }}
  {%- else -%}
    {{ rabbitmq_primary_hostname }}
  {%- endif -%}

# Set to 'force_reset' to forcefully return a RabbitMQ node to its virgin
# state.
rabbitmq_reset_option: reset

# List of packages we register a restart.
rabbitmq_restart_packages:
  - upgrade: major
    workround: "1:18.3.1"
    package: erlang-base
  - upgrade: "{%- if rabbitmq_config.hipe_compile -%}
                major
              {%- endif -%}"
    workround: "1:18.3.1"
    package: erlang-base-hipe
  - upgrade: major
    workround: "1:18.3.1"
    package: erlang-nox
  - upgrade: check
    workround: 3.6.1
    package: rabbitmq-server

rabbitmq_service_name: rabbitmq-server

# Time to wait for a RabbitMQ service start.
rabbitmq_start_timeout: "5m"

# Time to wait for a RabbitMQ application app.
rabbitmq_start_app_timeout: "5m"

# Time to wait for a RabbitMQ application stop.
rabbitmq_stop_app_timeout: "5m"

# Time to wait for a RabbitMQ reset command to complete.
rabbitmq_reset_timeout: "2m"

# Control the time we wait for a node to become synchronised.
# This has a max wait time in seconds of:
#    rabbitmq_sync_retries * rabbitmq_sync_delay
# Default:  90 * 10 = 900 seconds ( 15 mins )
rabbitmq_sync_retries: 90
rabbitmq_sync_delay: 10

# Config Processor variable mapping.
rabbitmq_cp:
  bind_addresses:
    - ip: "{{ host.bind.FND_RMQ.internal.ip_address }}"
      port: "{{ host.bind.FND_RMQ.internal.port }}"
  erlang_cookie: "{{ FND_RMQ.vars.erlang_cookie }}"
  hostname: "{{ host.my_dimensions.hostname }}"
  # WARNING: Changing this value requires a redeploy
  inet_dist_listen_port: >
    {{ host.bind.FND_RMQ.rabbitmq_inet_dist_listen.port }}
  management_address:
    ip: "{{ host.bind.FND_RMQ.rabbitmq_management.ip_address }}"
    port: "{{ host.bind.FND_RMQ.rabbitmq_management.port }}"
  # WARNING: Changing this value requires a redeploy
  home: "{{ host | item('my_logical_volumes.FND_RMQ')
                 | by_item('consumer.rabbitmq_env', 'home')
                 | item('0.mount', default='/var/lib/rabbitmq') }}"
  credentials: "{{ FND_RMQ.consumed_by }}"

# See: https://www.rabbitmq.com/plugins.html
# Add any RabbiitMQ plugins you wish to install to the list.
rabbitmq_plugins: []
#  - rabbitmq_management # See: https://www.rabbitmq.com/management.html

# For details of config and environment options
# See: https://www.rabbitmq.com/configure.html

# RabbitMQ environment.
# Adding a value here will add it to the RabbitMQ enviroment file
# See: https://www.rabbitmq.com/relocate.html
rabbitmq_env:
  etc: /etc/rabbitmq # Fix location for Debian and RPM do not change
  home: "{{ rabbitmq_cp.home }}"
  log_base: /var/log/rabbitmq
  nodename: "{{ rabbitmq_nodename }}"
  mnesia_base: "{{ rabbitmq_cp.home }}/mnesia"
  pid_file: /var/run/rabbitmq/{{ rabbitmq_nodename }}.pid

# RabbitMQ config.
rabbitmq_config:
  cluster_partition_handling: pause_minority
  # See: https://www.rabbitmq.com/disk-alarms.html for alternative setting
  disk_free_limit: 1000000000 # 1GB disk free limit
  vm_memory_high_watermark: 0.4
  hipe_compile: false
  # See: https://github.com/rabbitmq/rabbitmq-management/issues/41
  rates_mode: none
