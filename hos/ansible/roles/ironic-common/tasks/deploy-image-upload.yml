#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development Company LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---


- name: ironic-common | upload deploy images | check for iso
  shell: openstack  --os-username {{ glance_admin_user }} \
                 --os-password {{ glance_admin_password }} \
                 --os-tenant-name {{ glance_admin_tenant_name }} \
                 --os-auth-url {{ glance_auth_url }} \
                 --os-interface internal  \
                 image list | grep -w \
                 "ir-deploy-iso-{{ ironic_deploy_image_version }}" \
                 | awk '{print $2}'
  register: iso_image_exists_result

- name: ironic-common | upload deploy images | skip uploading
        deploy iso again
  debug: msg="Deploy iso already uploaded"
  when: iso_image_exists_result.stdout != ""

- name: ironic-common | upload deploy images | check for ramdisk
        image
  shell: openstack  --os-username {{ glance_admin_user }} \
                 --os-password {{ glance_admin_password }} \
                 --os-tenant-name {{ glance_admin_tenant_name }} \
                 --os-auth-url {{ glance_auth_url }} \
                 --os-interface internal  \
                 image list | grep -w \
                 "ir-deploy-ramdisk-{{ ironic_deploy_image_version }}" \
                 | awk '{print $2}'
  register: ramdisk_image_exists_result

- name: ironic-common | upload deploy images | skip uploading
        deploy ramdisk again
  debug: msg="Deploy ramdisk already uploaded"
  when: ramdisk_image_exists_result.stdout != ""

- name: ironic-common | upload deploy images | check for kernel image
  shell: openstack --os-username {{ glance_admin_user }} \
                --os-password {{ glance_admin_password }} \
                --os-tenant-name {{ glance_admin_tenant_name }}
                --os-auth-url {{ glance_auth_url }} \
                --os-interface internal \
                image list | grep -w \
                "ir-deploy-kernel-{{ ironic_deploy_image_version }}" \
                | awk '{print $2}'
  register: kernel_image_exists_result

- name: ironic-common | upload deploy images | skip uploading
        deploy kernel again
  debug: msg="Deploy kernel already uploaded"
  when: kernel_image_exists_result.stdout != ""

- name: ironic-common | install | update deploy Artifact venv cache
  become: yes
  install_package:
    cache: update

- name: ironic-common | install | Install Transient deploy Artifact Project
  become: yes
  install_package:
    name: ironic_deploy_images
    service: ironic-deploy-images
    state: present
  when: ramdisk_image_exists_result.stdout == "" or
        kernel_image_exists_result.stdout == ""  or
        iso_image_exists_result.stdout == ""

- name: ironic-common | install | Find archive name
  shell: ls {{ 'ironic-deploy-images' | jar_dir }}
  register: archive_list
  when: ramdisk_image_exists_result.stdout == "" or
        kernel_image_exists_result.stdout == ""  or
        iso_image_exists_result.stdout == ""

- name: ironic-common | upload deploy images | Unarchive image tar
        file
  unarchive:
    dest: "{{ ironic_deploy_image_dir }}"
    src: "{{ 'ironic-deploy-images' | jar_dir }}/{{ item }}"
    copy: no
  with_items: (archive_list.stdout).splitlines()
  when: ramdisk_image_exists_result.stdout == "" or
        kernel_image_exists_result.stdout == ""  or
        iso_image_exists_result.stdout == ""

- name: ironic-common | upload deploy images | Upload deploy ramdisk
  run_once: True
  command: "openstack
    --os-username {{ glance_admin_user }}
    --os-password {{ glance_admin_password }}
    --os-tenant-name {{ glance_admin_tenant_name }}
    --os-auth-url {{ glance_auth_url }}
    --os-interface internal
    --debug
    image create
    --container-format ari
    --disk-format ari
    --public
    --file {{ ironic_deploy_ramdisk }}
    ir-deploy-ramdisk-{{ ironic_deploy_image_version  }}"
  when: ramdisk_image_exists_result.stdout == ""
  register: openstackclient_result
  until: openstackclient_result|success
  retries: 5
  delay: 10

- name: ironic-common | upload deploy images | Upload deploy kernel
  run_once: True
  command: "openstack
    --os-username {{ glance_admin_user }}
    --os-password {{ glance_admin_password }}
    --os-tenant-name {{ glance_admin_tenant_name }}
    --os-auth-url {{ glance_auth_url }}
    --os-interface internal
    --debug
    image create
    --container-format aki
    --disk-format aki
    --public
    --file {{ ironic_deploy_kernel }}
    ir-deploy-kernel-{{ ironic_deploy_image_version }}"
  when: kernel_image_exists_result.stdout == ""
  register: openstackclient_result
  until: openstackclient_result|success
  retries: 5
  delay: 10

- name: ironic-common | upload deploy images | Upload iso
  run_once: True
  command: "openstack
    --os-username {{ glance_admin_user }}
    --os-password {{ glance_admin_password }}
    --os-tenant-name {{ glance_admin_tenant_name }}
    --os-auth-url {{ glance_auth_url }}
    --os-interface internal
    --debug
    image create
    --container-format bare
    --disk-format iso
    --public
    --file {{ ironic_deploy_iso }}
    ir-deploy-iso-{{ ironic_deploy_image_version }}"
  when: iso_image_exists_result.stdout == ""
  register: openstackclient_result
  until: openstackclient_result|success
  retries: 5
  delay: 10

- name: ironic-common | upload deploy image | delete images from tmp
  run_once: True
  shell: "rm -f {{ ironic_deploy_kernel }} {{ ironic_deploy_ramdisk }} \
          {{ ironic_deploy_iso }}"
  become: yes
  when: ramdisk_image_exists_result.stdout == "" or
        kernel_image_exists_result.stdout == "" or
        iso_image_exists_result.stdout == ""

- name: ironic-common | install | Remove Transient deploy Artifact Project
  become: yes
  install_package:
    name: ironic_deploy_images
    service: ironic-deploy-images
    state: absent
  when: ramdisk_image_exists_result.stdout == "" or
        kernel_image_exists_result.stdout == ""  or
        iso_image_exists_result.stdout == ""
