#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development Company LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

tempest_auth_url: "{{ hostvars[groups['KEY-API'][0]].KEY_API.advertises.vips.admin[0].url }}"

keystone_admin_user: "{{ hostvars[groups['KEY-API'][0]].KEY_API.vars.keystone_admin_user }}"
keystone_admin_tenant: "{{ hostvars[groups['KEY-API'][0]].KEY_API.vars.keystone_admin_tenant }}"
keystone_admin_pwd: "{{ hostvars[groups['KEY-API'][0]].KEY_API.vars.keystone_admin_pwd }}"
keystone_demo_user: "{{ hostvars[groups['KEY-API'][0]].KEY_API.vars.keystone_demo_user }}"
keystone_demo_tenant: "{{ hostvars[groups['KEY-API'][0]].KEY_API.vars.keystone_demo_tenant }}"
keystone_demo_pwd: "{{ hostvars[groups['KEY-API'][0]].KEY_API.vars.keystone_demo_pwd }}"
keystone_memeber_role: "{{ hostvars[groups['KEY-API'][0]].KEY_API.vars.keystone_member_role }}"


# The installation_directory is where the configuration files are deployed,
# e.g. .testr.conf, etc/tempest.conf
installation_directory: "{{ 'tempest' | config_dir }}/.."
tempest_conf_dir: "{{ 'tempest' | config_dir }}"
tempest_bin_dir: "{{ 'tempest' | bin_dir }}/../lib/python2.7/site-packages"

tempest_user: tempest
tempest_group: tempest

# The default run concurrency is determined by the number of the CPU cores on
# the test driver
run_concurrency: 0

# This is the file that includes the regex to filter the tests to be executed
run_filter: ci

# tempest tests timeout in seconds
tempest_timeout_secs: 32400
tempest_poll_secs: 60

# Services available for test
cinder_available: "{{ ( 'CND-API' in groups ) and ( ( groups['CND-API'] | length ) > 0 ) | ternary(true, false) }}"
neutron_available: true
glance_available: true
swift_available: true
nova_available: true
heat_available: true
ceilometer_available: false
horizon_available: true
sahara_available: false
ironic_available: "{{ ( 'IRN-API' in groups ) and ( ( groups['IRN-API'] | length ) > 0 ) | ternary(true, false) }}"
trove_available: false
zaqar_available: false

# Defaults for test resources
username: helion_tempest
alt_username: helion_tempest_alt
password: helion

# Guest OS image to use and related ssh user name
glance_image_name: cirros
glance_image_ssh_user: cirros

# Nova flavor to use
flavor_ref: 1

net_type: "{% if ironic_available %}net-list{% else %}net-external-list{% endif %}"
ext_net_name: ext-net
ext_net_cidr: "172.31.0.0/16"

# TLS switches (true/false)
enable_external_tls: "false"
enable_internal_tls: "true"

# TLS certificate file
cacert: /etc/ssl/certs/ca-certificates.crt

# Service public URL to use
publicURL: https://myhelion.test

# Tempest options without TLS
tempest_tls_disabled:
    - { section: "baremetal", option: "endpoint_type", value: "internalURL" }
    - { section: "compute", option: "endpoint_type", value: "internalURL" }
    - { section: "dashboard", option: "dashboard_url", value: "{{ hostvars[groups['HZN-WEB'][0]].HZN_WEB.advertises.vips.private[0].url }}" }
    - { section: "dashboard", option: "login_url", value: "{{ hostvars[groups['HZN-WEB'][0]].HZN_WEB.advertises.vips.private[0].url }}/auth/login" }
    - { section: "data_processing", option: "endpoint_type", value: "internalURL" }
    - { section: "identity", option: "v2_public_endpoint_type", value: "internalURL" }
    - { section: "identity", option: "disable_ssl_certificate_validation", value: "true" }
    - { section: "identity", option: "ca_certificates_file", value: "{{ cacert }}" }
    - { section: "identity", option: "uri", value: "{{ hostvars[groups['KEY-API'][0]].KEY_API.advertises.vips.admin[0].url }}/v2.0" }
    - { section: "identity", option: "uri_v3", value: "{{ hostvars[groups['KEY-API'][0]].KEY_API.advertises.vips.admin[0].url }}/v3" }
    - { section: "image", option: "endpoint_type", value: "internalURL" }
    - { section: "network", option: "endpoint_type", value: "internalURL" }
    - { section: "object-storage", option: "endpoint_type", value: "internalURL" }
    - { section: "orchestration", option: "endpoint_type", value: "internalURL" }
    - { section: "telemetry", option: "endpoint_type", value: "internalURL" }
    - { section: "volume", option: "endpoint_type", value: "internalURL" }

# Tempest options with external TLS enabled
tempest_external_tls_enabled:
    - { section: "dashboard", option: "dashboard_url", value: "{{ publicURL }}" }
    - { section: "dashboard", option: "login_url", value: "{{ publicURL }}/auth/login" }
    - { section: "identity", option: "disable_ssl_certificate_validation", value: "false" }
    - { section: "identity", option: "ca_certificates_file", value: "{{ cacert }}" }
    - { section: "identity", option: "uri", value: "{{ publicURL }}:5000/v2.0" }
    - { section: "identity", option: "uri_v3", value: "{{ publicURL }}:5000/v3" }

# Tempest options with internal TLS enabled
tempest_internal_tls_enabled:
    - { section: "baremetal", option: "endpoint_type", value: "internalURL" }
    - { section: "compute", option: "endpoint_type", value: "internalURL" }
    - { section: "dashboard", option: "dashboard_url", value: "{{ hostvars[groups['HZN-WEB'][0]].HZN_WEB.advertises.vips.private[0].url }}" }
    - { section: "dashboard", option: "login_url", value: "{{ hostvars[groups['HZN-WEB'][0]].HZN_WEB.advertises.vips.private[0].url }}/auth/login" }
    - { section: "data_processing", option: "endpoint_type", value: "internalURL" }
    - { section: "identity", option: "disable_ssl_certificate_validation", value: "false" }
    - { section: "identity", option: "ca_certificates_file", value: "{{ cacert }}" }
    - { section: "identity", option: "uri", value: "{{ hostvars[groups['KEY-API'][0]].KEY_API.advertises.vips.admin[0].url }}/v2.0" }
    - { section: "identity", option: "uri_v3", value: "{{ hostvars[groups['KEY-API'][0]].KEY_API.advertises.vips.admin[0].url }}/v3" }
    - { section: "identity", option: "v2_public_endpoint_type", value: "internalURL" }
    - { section: "image", option: "endpoint_type", value: "internalURL" }
    - { section: "network", option: "endpoint_type", value: "internalURL" }
    - { section: "object-storage", option: "endpoint_type", value: "internalURL" }
    - { section: "orchestration", option: "endpoint_type", value: "internalURL" }
    - { section: "telemetry", option: "endpoint_type", value: "internalURL" }
    - { section: "volume", option: "endpoint_type", value: "internalURL" }

ironic_ssh_user: "root"
ironic_flavor: "m1.baremetal"

ironic_cloud_options:
    - { section: "network", option: "tenant_network_cidr", value: "192.168.245.0/24" }
    - { section: "network", option: "tenant_networks_reachable", value: "True" }
    - { section: "compute", option: "flavor_ref", value: "6" }
    - { section: "compute", option: "flavor_ref_alt", value: "6" }
    - { section: "compute", option: "ssh_connect_method", value: "fixed" }
    - { section: "compute", option: "ssh_user", value: "{{ ironic_ssh_user }}" }
    - { section: "compute", option: "image_ssh_user", value: "{{ ironic_ssh_user }}" }
    - { section: "compute", option: "build_timeout", value: "1200" }
    - { section: "compute", option: "allow_tenant_isolation", value: "True" }
    - { section: "compute", option: "network_for_ssh", value: "{{ ext_net_name }}" }
    - { section: "scenario", option: "ssh_user", value: "{{ ironic_ssh_user }}" }
    - { section: "baremetal", option: "driver_enabled", value: "True" }
    - { section: "baremetal", option: "active_timeout", value: "1200" }
    - { section: "baremetal", option: "association_timeout", value: "500" }
    - { section: "baremetal", option: "power_timeout", value: "60" }
    - { section: "baremetal", option: "unprovision_timeout", value: "1800" }
    - { section: "validation", option: "ssh_timeout", value: "1200" }
    - { section: "validation", option: "ip_version_for_ssh", value: "4" }
    - { section: "validation", option: "run_validation", value: "False" }
    - { section: "validation", option: "connect_method", value: "fixed" }
    - { section: "orchestration", option: "instance_type", value: "{{ ironic_flavor }}" }
    - { section: "compute-feature-enabled", option: "suspend", value: "False" }
    - { section: "compute-feature-enabled", option: "snapshot", value: "False" }
    - { section: "compute-feature-enabled", option: "shelve", value: "False" }
    - { section: "compute-feature-enabled", option: "rescue", value: "False" }
    - { section: "compute-feature-enabled", option: "pause", value: "False" }
    - { section: "compute-feature-enabled", option: "interface_attach", value: "False" }
    - { section: "compute-feature-enabled", option: "console_output", value: "False" }
    - { section: "compute-feature-enabled", option: "live_migration", value: "False" }
    - { section: "compute-feature-enabled", option: "vnc_console", value: "False" }

# Timeout (in seconds) to wait for the ssh banner
ssh_timeout: 300
