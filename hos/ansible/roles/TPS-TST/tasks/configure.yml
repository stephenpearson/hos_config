#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development Company LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
# Configure Tempest on the target node

- name: tps-tst | configure | Add group '{{ tempest_group }}'
  group: name={{ tempest_group }}

- name: tps-tst | configure | Add user '{{ tempest_user }}'
  user: name={{ tempest_user }} group={{ tempest_group }} createhome=yes home='{{ installation_directory }}' shell=/bin/bash

- name: tps-tst | configure | Set ownership of {{ installation_directory }} root folder
  file: path={{ installation_directory }} owner={{ tempest_user }} group={{ tempest_group }} state=directory recurse=yes

- name: tps-tst | configure | Set ACLs of {{ installation_directory }} root folder
  file: path={{ installation_directory }} mode=0755 recurse=no

- name: tps-tst | configure | Create the configuration folder {{ tempest_conf_dir }}
  file: path={{ tempest_conf_dir }} owner={{ tempest_user }} group={{ tempest_group }} mode=0755 state=directory

- name: tps-tst | configure | Create the bin folder {{ installation_directory }}/bin
  file: path={{ installation_directory }}/bin owner={{ tempest_user }} group={{ tempest_group }} mode=0755 state=directory

- name: tps-tst | configure | Create testr config file
  copy:
    src: .testr.conf
    dest: "{{ installation_directory }}/.testr.conf"
    owner: "{{ tempest_user }}"
    group: "{{ tempest_group }}"
    mode: 0640

- name: tps-tst | configure | Initialise the .testrepository directory if it doesn't exist
  sudo: yes
  sudo_user: "{{ tempest_user }}"
  shell: "{{ installation_directory }}/venv/bin/testr init"
  args:
    chdir: "{{ installation_directory }}"
    creates: "{{ installation_directory }}/.testrepository"

- name: tps-tst | configure | Tempest {{ tempest_conf_dir }}/tempest.conf
  template:
    src: "tempest.conf.j2"
    dest: "{{ tempest_conf_dir }}/tempest.conf"
    owner: "{{ tempest_user }}"
    group: "{{ tempest_group }}"
    mode: 0644

- name: tps-tst | configure | Deploy tests2skip.py
  copy:
    src: tests2skip.py
    dest: "{{ installation_directory }}/tests2skip.py"
    owner: "{{ tempest_user }}"
    group: "{{ tempest_group }}"
    mode: 0640

- name: tps-tst | configure | Deploy run_filters
  copy:
    src: run_filters
    dest: "{{ installation_directory }}"
    owner: "{{ tempest_user }}"
    group: "{{ tempest_group }}"
    mode: 0640

- name: tps-tst | configure | Deploy helion-tempest script to run tests
  template: >
    src=helion-tempest.sh.j2
    dest="{{ installation_directory }}/bin/helion-tempest.sh"
    owner={{ tempest_user }}
    group={{ tempest_group }}
    mode=0700

- name: tps-tst | configure | Deploy generate-subunit script to generate subunit file from last tempest run
  template: >
    src=generate-subunit.sh.j2
    dest="{{ installation_directory }}/bin/generate-subunit.sh"
    owner={{ tempest_user }}
    group={{ tempest_group }}
    mode=0700

# To merge this patch we need to match what the CI script expects
# Once this is merge CI can be changed to use the tempest-run playbook
# and this link can be removed
- name: tps-tst | configure | link to /opt/stack/tempest
  file: src={{ installation_directory }} dest=/opt/stack/tempest owner={{ tempest_user }} group={{ tempest_group }} state=link

# TLS logic:
# TLS disabled: enable_external_tls=false and enable_internal_tls=false
# internal TLS enabled : enable_external_tls=false and enable_internal_tls=true
# external TLS enabled : enable_external_tls=true and enable_internal_tls=false
- name: tps-tst | configure | Configure Tempest without TLS
  ini_file:
    dest: /{{ tempest_conf_dir }}/tempest.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items: "{{ tempest_tls_disabled }}"
  when: enable_external_tls == "false" and enable_internal_tls == "false"

- name: tps-tst | configure | Configure Tempest with external TLS enabled
  ini_file:
    dest: /{{ tempest_conf_dir }}/tempest.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items: "{{ tempest_external_tls_enabled }}"
  when: enable_external_tls == "true" and enable_internal_tls == "false"

- name: tps-tst | configure | Configure Tempest with internal TLS enabled
  ini_file:
    dest: /{{ tempest_conf_dir }}/tempest.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items: "{{ tempest_internal_tls_enabled }}"
  when: enable_internal_tls == "true" and enable_external_tls == "false"

- fail: msg="A single endpoint can be passed on to Tempest. So either enable_internal_tls or enable_external_tls needs to be true."
  when: enable_internal_tls == "true" and enable_external_tls == "true"

# The default value for stack_owner_role is a role that does not exists in
# HLM, which used to be heat default: heat_stack_owner
# Changing this to keystone default role to match devstack behaviour
- name: tps-tst | configure | Update stack_owner_role
  ini_file:
    dest: /{{ tempest_conf_dir }}/tempest.conf
    section: "orchestration"
    option: "stack_owner_role"
    value: "{{ keystone_memeber_role }}"

# Orchestration tests by default expect my.micro as flavor
# The smallest flavor available in HOS is my.tiny, so changing configuration
# to that. Available flavours are not available in group_vars, so hard-coding
# this for now.
- name: tps-tst | configure | Set the flavour for orchestration tests
  ini_file:
    dest: /{{ tempest_conf_dir }}/tempest.conf
    section: "orchestration"
    option: "instance_type"
    value: "m1.tiny"

- name: tps-tst | configure | Set the ironic specific values
  ini_file:
    dest: /{{ tempest_conf_dir }}/tempest.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items: "{{ ironic_cloud_options }}"
  when: ( 'IRN-API' in groups ) and ( ( groups['IRN-API'] | length ) > 0 )
